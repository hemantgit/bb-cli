'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _util = require('util');

var _util2 = _interopRequireDefault(_util);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function CommandError() {
  var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var implementationContext = arguments[1];

  this.name = 'CommandError';
  this.type = settings.type || 'Command';
  this.message = settings.message || 'An error occurred.';
  this.code = settings.code || 1;
  this.isCommandError = true;
  Error.captureStackTrace(this, implementationContext || CommandError);
}

function error(settings) {
  return new CommandError(settings, error);
}

_util2.default.inherits(CommandError, Error);
/**
 * Create the new instance of the CommandError object,
 * ensuring that it properly extends from the Error class.
 * @module error
 * @type {object}
 * @example
 * Setting up the log header:
 *
 * ```javascript
 * import { error } from '@bb-cli/base';
 *
 * const out = sh.exec('ls', { silent: true });
 * if (out.code !== 0) {
 *   throw error({
 *     type: 'Shell.Exec',
 *     code: out.code,
 *     message: out.stderr.trim(),
 *   });
 * }
 * ```
 */

exports.default = error;
//# sourceMappingURL=error.js.map