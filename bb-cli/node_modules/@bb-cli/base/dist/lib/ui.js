'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inquirer = require('inquirer');

var _inquirer2 = _interopRequireDefault(_inquirer);

var _safe = require('colors/safe');

var _safe2 = _interopRequireDefault(_safe);

var _cliTable = require('cli-table');

var _cliTable2 = _interopRequireDefault(_cliTable);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Create a self contained [inquirer](https://github.com/sboudrias/Inquirer.js)
 * module via `inquirer.createPromptModule` method.
 * @memberof module:ui
 * @link https://github.com/sboudrias/Inquirer.js
 * @type {object}
 * @param {array|object}  questions A collection of inquirer questions
 * @returns {Promise}
 * @public
 * @example
 * Basic example:
 *
 * ```javascript
 * import { ui } from '@bb-cli/base';
 * const questions = [{
 *   type: 'input',
 *   name: 'name',
 *   message: 'Who are you?',
 *   default: 'Guest',
 *   validate: value => true,
 *   filter: value => value,
 * }];
 *
 * ui.prompt(questions).then( answers => {
 *     // do something with the answers here.
 * })
 * ```
 */
var prompt = _inquirer2.default.createPromptModule();

/**
 * Colors styles console based on [colors](https://github.com/Marak/colors.js)
 * @link https://github.com/Marak/colors.js
 * @type {object}
 * @memberof module:ui
 * @public
 * @example
 * Basic example:
 *
 * ```javascript
 * import { ui } from '@bb-cli/base';
 * let logInfo = ui.colors.info('Some info style output');
 * log.verbose(`Show ${logInfo}`);
 * ```
 * Custom heading style:
 *
 * ```javascript
 * let logHead = ui.colors.heading('Some bold white heading');
 * log.info(logHead);
 * ```
 */
/**
 * ------------------------------------------------------------------------
 * UI module
 * ------------------------------------------------------------------------
 */
var colors = _safe2.default;

/**
 * Colors default styles
 * @enum {object}
 * @memberof module:ui.colors
 */
var defaultTheme = {
  silly: 'rainbow',
  input: 'grey',
  verbose: 'cyan',
  prompt: 'grey',
  info: ['green', 'underline'],
  data: 'grey',
  help: 'cyan',
  warn: 'yellow',
  debug: 'blue',
  error: 'red',
  // custom
  heading: ['white', 'bold']
};

colors.setTheme(defaultTheme);

var defaultTableOptions = {
  chars: {
    top: '═',
    'top-mid': '╤',
    'top-left': '╔',
    'top-right': '╗',
    bottom: '═',
    'bottom-mid': '╧',
    'bottom-left': '╚',
    'bottom-right': '╝',
    left: '║',
    'left-mid': '╟',
    mid: '─',
    'mid-mid': '┼',
    right: '║',
    'right-mid': '╢',
    middle: '│'
  },
  style: {
    'padding-left': 2,
    'padding-right': 2,
    head: ['white', 'bold'],
    border: ['white'],
    compact: false
  }
};
var table = function table(options) {
  return new _cliTable2.default(Object.assign({}, defaultTableOptions, options));
};

/**
 * User Interface for the terminal (Prompting / Styles / Spinners / Progress)
 * @module ui
 * @type {object}
 */

exports.default = {
  prompt: prompt,
  colors: colors,
  table: table
};
//# sourceMappingURL=ui.js.map