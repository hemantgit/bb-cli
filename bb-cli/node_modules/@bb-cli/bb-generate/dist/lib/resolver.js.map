{"version":3,"sources":["../../src/lib/resolver.js"],"names":["filterByName","resolversList","name","verbose","resolverObj","type","message","filterByTemplate","templateName","templateFilePath","resolveByFS","generatorApi","Promise","resolve","err","reject","resolveByLocator","template","scope","then","resolver"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;AAEA,IAAMA,eAAe,SAAfA,YAAe,CAACC,aAAD,EAAgBC,IAAhB,EAAyB;AAC5C,YAAIC,OAAJ,CAAY,QAAZ,eAAiCD,IAAjC;AACA,MAAME,cAAc,iBAAK,mBAAO,aAAP,EAAsBF,IAAtB,CAAL,EAAkCD,aAAlC,CAApB;AACA;AACA,MAAI,kBAAMG,WAAN,CAAJ,EAAwB;AACtB,UAAM,iBAAM;AACVC,YAAM,aADI;AAEVC,mCAA2BJ,IAA3B;AAFU,KAAN,CAAN;AAID;AACD,SAAOE,WAAP;AACD,CAXD;;AAaA,IAAMG,mBAAmB,SAAnBA,gBAAmB,CAACH,WAAD,EAA2C;AAAA,MAA7BI,YAA6B,uEAAd,SAAc;;AAClE,YAAIL,OAAJ,CAAY,QAAZ,mBAAqCK,YAArC;AACA,MAAMC,mBAAmB,iBAAK,WAAL,EAAkBL,WAAlB,EAA+BI,YAA/B,CAAzB;AACA,MAAI,kBAAMC,gBAAN,CAAJ,EAA6B;AAC3B,UAAM,iBAAM;AACVJ,YAAM,aADI;AAEVC,mCAA2BE,YAA3B;AAFU,KAAN,CAAN;AAID;AACD,SAAOC,gBAAP;AACD,CAVD;;AAYA,SAASC,WAAT,CAAqBD,gBAArB,EAAuC;AACrC,MAAI;AACF,QAAME,eAAe,sBAAcF,gBAAd,CAArB;AACA,WAAOG,QAAQC,OAAR,CAAgBF,YAAhB,CAAP;AACD,GAHD,CAGE,OAAOG,GAAP,EAAY;AACZ,WAAOF,QAAQG,MAAR,CAAeD,GAAf,CAAP;AACD;AACF;;AAED,SAASE,gBAAT,CAA0Bd,IAA1B,EAAgCe,QAAhC,EAA0CC,KAA1C,EAAiD;AAC/C,SAAO,uBAAQA,KAAR,EACJC,IADI,CACC;AAAA,WAAiBnB,aAAaC,aAAb,EAA4BC,IAA5B,CAAjB;AAAA,GADD,EAEJiB,IAFI,CAEC;AAAA,WAAeZ,iBAAiBH,WAAjB,EAA8Ba,QAA9B,CAAf;AAAA,GAFD,EAGJE,IAHI,CAGCT,WAHD,CAAP;AAID;;AAED;;;;;AAKA,IAAMU,WAAW,SAAXA,QAAW,CAAClB,IAAD,EAAOe,QAAP,EAAiBC,KAAjB,EAA2B;AAC1C,MAAI,kBAAMhB,IAAN,KAAe,mBAAOA,IAAP,CAAnB,EAAiC;AAC/B,cAAIC,OAAJ,CAAY,SAAZ,wBAA2CD,IAA3C;AACA,WAAOQ,YAAY,eAAKG,OAAL,CAAaX,IAAb,CAAZ,CAAP;AACD;;AAED,YAAIC,OAAJ,CAAY,SAAZ,yBAA4CD,IAA5C;AACA,SAAOc,iBAAiBd,IAAjB,EAAuBe,QAAvB,EAAiCC,KAAjC,CAAP;AACD,CARD;;kBAUeE,Q","file":"resolver.js","sourcesContent":["import { log, error } from '@bb-cli/base';\nimport { find, propEq, isNil, prop } from 'ramda';\nimport path from 'path';\nimport { isDir, isFile } from './utils';\nimport loadGenerator from './loader';\nimport locator from './locator';\n\nconst filterByName = (resolversList, name) => {\n  log.verbose('FILTER', `by name ${name}`);\n  const resolverObj = find(propEq('displayName', name))(resolversList);\n  // not found in the list throw an error\n  if (isNil(resolverObj)) {\n    throw error({\n      type: 'E_NOT_FOUND',\n      message: `Unable to find ${name} generator.`,\n    });\n  }\n  return resolverObj;\n};\n\nconst filterByTemplate = (resolverObj, templateName = 'default') => {\n  log.verbose('FILTER', `by template ${templateName}`);\n  const templateFilePath = prop('templates', resolverObj)[templateName];\n  if (isNil(templateFilePath)) {\n    throw error({\n      type: 'E_NOT_FOUND',\n      message: `Unable to find ${templateName} template.`,\n    });\n  }\n  return templateFilePath;\n};\n\nfunction resolveByFS(templateFilePath) {\n  try {\n    const generatorApi = loadGenerator(templateFilePath);\n    return Promise.resolve(generatorApi);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\n\nfunction resolveByLocator(name, template, scope) {\n  return locator(scope)\n    .then(resolversList => filterByName(resolversList, name))\n    .then(resolverObj => filterByTemplate(resolverObj, template))\n    .then(resolveByFS);\n}\n\n/**\n * @private\n * @todo resolve by git url.\n * @todo if not found, try and install.\n */\nconst resolver = (name, template, scope) => {\n  if (isDir(name) || isFile(name)) {\n    log.verbose('RESOLVE', `from fs template ${name}`);\n    return resolveByFS(path.resolve(name));\n  }\n\n  log.verbose('RESOLVE', `from npm template ${name}`);\n  return resolveByLocator(name, template, scope);\n};\n\nexport default resolver;\n"]}