{"version":3,"sources":["../../src/lib/generator.js"],"names":["runPreHook","templateObj","verbose","preHook","preTransform","call","data","transform","output","path","files","templateDir","dirname","input","srcImages","extensions","map","join","ext","srcInput","excludeDirs","globs","dir","concat","img","Promise","resolve","reject","src","pipe","dest","follow","settings","on","transformError","type","message","err","trim","pattern","rename","match","interpolate","renameRegex","RegExp","renameFn","match1","match2","replace","newName","filePath","basename","push","runPostHook","exclude","excludedItems","filter","i","is","String","isEmpty","isNil","forEach","fullPathPattern","startsWith","result","rm","code","stderr","postHook","postTransform","generate","then","promptAndGenerate","name","template","options","scope","api","yes"],"mappings":"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","file":"generator.js","sourcesContent":["import path from 'path';\nimport R from 'ramda';\nimport gulp from 'gulp';\nimport gTemplate from 'gulp-template';\nimport gRename from 'gulp-rename';\nimport { log, error, sh } from '@bb-cli/base';\nimport resolver from './resolver';\nimport prompter from './prompter';\n\nconst runPreHook = (templateObj) => {\n  log.verbose('PRE_HOOK', 'run pre-transform hook');\n  const preHook = templateObj.preTransform;\n  if (typeof preHook === 'function') {\n    preHook.call(null, templateObj.data);\n  }\n  return templateObj;\n};\n\n/**\n * @todo 1.prevent creating output folder on template error\n * @private\n */\nconst transform = (templateObj) => {\n  const output = {\n    path: templateObj.output,\n    files: [],\n  };\n  const templateDir = path.dirname(templateObj.input);\n\n  const srcImages = () => {\n    const extensions = ['png', 'jpg', 'jpeg', 'webp', 'gif', 'tiff', 'bmp'];\n    return extensions.map(ext => `${path.join(templateDir, '**', `*.${ext}`)}`);\n  };\n  const srcInput = () => {\n    const excludeDirs = ['bower_components', 'node_modules', '.git', '.svn'];\n    const globs = excludeDirs.map(dir => `!${path.join(templateDir, dir)}`)\n      .concat(srcImages().map(img => `!${img}`))\n      .concat(templateObj.input);\n    log.verbose('TRANSFORM', globs);\n    return globs;\n  };\n\n  log.verbose('DATA', templateObj);\n  return new Promise((resolve, reject) => {\n    // copy images first\n    // gulp-template is screwing up with images when they are buffered back\n    // https://github.com/sindresorhus/gulp-template/blob/master/index.js#L21\n    gulp.src(srcImages()).pipe(gulp.dest(path.resolve(templateObj.output)));\n    // transform template\n    gulp.src(srcInput(), { follow: false })\n      .pipe(gTemplate(templateObj.data, templateObj.settings))\n      // @see todo 1\n      .on('error', err => {\n        const transformError = error({\n          type: 'E_TRANSFORM',\n          message: err.message.trim(),\n        });\n        reject(transformError);\n      })\n      .pipe(gRename(filePath => {\n        const pattern = templateObj.rename.match || templateObj.settings.interpolate;\n        const renameRegex = new RegExp(pattern);\n        const renameFn = (match1, match2) => templateObj.rename.replace(templateObj.data, match2);\n        const newName = filePath.basename.replace(renameRegex, renameFn);\n        if (newName && newName !== filePath.basename) {\n          log.verbose('RENAME', `Renaming ${filePath.basename} to ${newName}`);\n          // mutate param required to rename.\n          filePath.basename = newName; // eslint-disable-line no-param-reassign\n        }\n        output.files.push(filePath);\n        return filePath;\n      }))\n      .pipe(gulp.dest(templateObj.output))\n\n      .on('error', reject)\n      .on('end', () => resolve(output));\n  });\n};\n\n/**\n * Run a postTransform hook on\n * @todo 1. create resolve filepaths correctly (use nodejs `path.sep` fn)\n * @private\n */\nconst runPostHook = (output, exclude = []) => {\n  log.verbose('POST_HOOK', `run post-transform hook ${output}`);\n  const excludedItems = R.map(\n    R.trim,\n    R.filter((i) => R.is(String, i) && !R.isEmpty(i) && !R.isNil(i), exclude)\n  );\n  R.forEach(pattern => {\n    const fullPathPattern = path.resolve(output.path, pattern);\n    if (pattern.startsWith('/') || pattern.startsWith('../')) {\n      log.verbose('EXCLUDE', `refusing to delete ${pattern}`);\n    } else {\n      const result = sh.rm('-rf', fullPathPattern);\n      if (result.code !== 0) {\n        throw error({\n          type: 'E_EXEC',\n          code: result.code,\n          message: result.stderr.trim(),\n        });\n      }\n      log.verbose('EXLCUDE', fullPathPattern);\n    }\n    return fullPathPattern;\n  }, excludedItems);\n\n  const postHook = output.postTransform;\n  if (typeof postHook === 'function') {\n    postHook.call(null, output);\n  }\n  return output;\n};\n\n\nconst generate = (templateObj, exclude) =>\n  transform(runPreHook(templateObj))\n    .then(output => runPostHook(output, exclude));\n\n\nconst promptAndGenerate = (name, template, options) =>\n  resolver(name, template, options.scope)\n    .then(api => prompter(api, options.output, options.yes))\n    .then(templateObj => generate(templateObj, options.exclude));\n\n\n/**\n * API usage for bb-generate CLI\n *\n * @module @bb-cli/bb-generate.generate\n * @type {Object}\n * @public\n * @since v2.0.0\n * @returns {Promise.<GeneratedItems>} items that were transformed\n * @example\n * Basic generate item example\n *\n * ```javascript\n * import bbGenerate from '@bb-cli/bb-generate';\n * const options {\n *  scope: '@backbase',\n * };\n *\n * bbGenerate(generatorName, template, options)\n *   .then(handleOutputFiles, handleErrors);\n * ```\n */\n\nexport default promptAndGenerate;\nexport {\n  promptAndGenerate,\n  generate,\n};\n"]}