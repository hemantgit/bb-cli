{"version":3,"sources":["../../src/lib/utils.js"],"names":["R","pipeline","list","flatten","reduce","acc","fn","then","Promise","resolve","accum","debug","process","stdout","write","JSON","stringify","res","isDir","test","d","isFile","f"],"mappings":";;;;;;;AAAA;;IAAYA,C;;AACZ;;;;AAEA;AACA;AACA;AACA,IAAMC,WAAW,SAAXA,QAAW;AAAA,oCAAIC,IAAJ;AAAIA,QAAJ;AAAA;;AAAA,SACf;AAAA,WAASF,EAAEG,OAAF,CAAUD,IAAV,EAAgBE,MAAhB,CAAuB,UAACC,GAAD,EAAMC,EAAN;AAAA,aAAaD,IAAIE,IAAJ,CAASD,EAAT,CAAb;AAAA,KAAvB,EAAkDE,QAAQC,OAAR,CAAgBC,KAAhB,CAAlD,CAAT;AAAA,GADe;AAAA,CAAjB;;AAGA,IAAMC,QAAQ,SAARA,KAAQ;AAAA,SAAOC,QAAQC,MAAR,CAAeC,KAAf,CAAqBC,KAAKC,SAAL,CAAeC,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAArB,CAAP;AAAA,CAAd;;AAEA,IAAMC,QAAQ,SAARA,KAAQ;AAAA,SAAK,SAAGC,IAAH,CAAQ,IAAR,EAAcC,CAAd,CAAL;AAAA,CAAd;;AAEA,IAAMC,SAAS,SAATA,MAAS;AAAA,SAAK,SAAGF,IAAH,CAAQ,IAAR,EAAcG,CAAd,CAAL;AAAA,CAAf;;QAGErB,Q,GAAAA,Q;QACAU,K,GAAAA,K;QACAO,K,GAAAA,K;QACAG,M,GAAAA,M","file":"utils.js","sourcesContent":["import * as R from 'ramda';\nimport { sh } from '@bb-cli/base';\n\n// Take a list (Array) of functions and end up with a single Promise\n// that represents all of those functions composed to run in a sequence.\n// https://medium.com/@dtipson/more-functional-javascript-reducing-promises-ramda-js-arrow-functions-again-c1f90e0a79d0\nconst pipeline = (...list) =>\n  accum => R.flatten(list).reduce((acc, fn) => acc.then(fn), Promise.resolve(accum));\n\nconst debug = res => process.stdout.write(JSON.stringify(res, null, 2));\n\nconst isDir = d => sh.test('-d', d);\n\nconst isFile = f => sh.test('-f', f);\n\nexport {\n  pipeline,\n  debug,\n  isDir,\n  isFile,\n};\n"]}