{"version":3,"sources":["../../src/commands/bb-generate-item.e2e.js"],"names":["bin","resolve","__dirname","setup","teardown","tmpOut","name","args","cmd","prompts","ENTER","then","dirname","actual","res","stdout","includes","expected","assert","equal","Object","assign","code","ls","trim","join","cat","fixedModelXML","generatedModelXML","readFileSync","stderr"],"mappings":"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","file":"bb-generate-item.e2e.js","sourcesContent":["import { test } from 'blue-tape';\nimport path from 'path';\nimport fs from 'fs';\nimport { sh } from '@bb-cli/base';\nimport run, { Keys, createTmpDir } from '../../../../test/helpers';\n\nconst bin = path.resolve(__dirname, '../../bin/bb-generate-item.js');\n\n// Setup phase create fixtures\nconst setup = () => createTmpDir();\n// Dispose of your fixtures here.\nconst teardown = () => {};\n\nconst tmpOut = setup().name;\n/**\n* ------------------------------------------------------------------------\n* Test Success\n* ------------------------------------------------------------------------\n*/\ntest('e2e :: bb-generate-item :: file-system resolve', assert => {\n  const args = 'test/fixtures/generators/file-system';\n  const cmd = [bin, args,\n    '-o', tmpOut,\n    '-x', 'exclude-me.txt',\n  ];\n  const name = 'dummy';\n  const prompts = [\n    name, Keys.ENTER, //name\n  ];\n\n  return run(cmd, prompts).then(res => {\n    const dirname = path.resolve(tmpOut, name);\n    const actual = res.stdout.includes('Item successfully generated');\n    const expected = true;\n    assert.equal(actual, expected, 'Should contain the the successfully message');\n    return Object.assign({}, {\n      dirname,\n      name,\n    }, res);\n  }).then(res => {\n    const actual = res.code;\n    const expected = 0;\n    assert.equal(actual, expected, 'Should exit with success exit code');\n    return res;\n  }).then(res => {\n    const actual = sh.ls('-R', res.dirname).stdout.trim();\n    const expected = ['README.md'].join('\\n');\n    assert.equal(actual, expected, 'Should exclude the excluded item.');\n    return res;\n  })\n  .then(res => {\n    const actual = sh.cat(path.resolve(res.dirname, 'README.md')).stdout;\n    const expected = '# dummy\\n';\n    assert.equal(actual, expected, 'Should generate a README file with the prompted name.');\n    return res;\n  })\n  .then(teardown);\n});\n\ntest('e2e :: bb-generate-item :: widget-bb-ng-legacy', assert => {\n  const args = 'test/fixtures/generators/generator-widget-bb-ng-legacy';\n  const cmd = [bin, args, '-o', tmpOut];\n  const name = 'my-bb-ng-widget';\n  const prompts = [\n    'My BB ng widget', Keys.ENTER, // name\n    'Some title', Keys.ENTER, // title\n    'Some description', Keys.ENTER, // description\n  ];\n  return run(cmd, prompts).then(res => {\n    const dirname = path.resolve(tmpOut, name);\n    const actual = res.stdout.includes('Item successfully generated');\n    const expected = true;\n    assert.equal(res.code, 0, 'Should exit with success exit code');\n    assert.equal(actual, expected, 'Should contain the the successfully message');\n    return {\n      dirname,\n      name,\n    };\n  })\n  .then(res => {\n    const actual = sh.ls('-R', res.dirname).stdout.trim();\n    const expected = ['assets',\n      'assets/icon.png',\n      'index.html',\n      'model.xml',\n      'package.json',\n      'README.md',\n      'scripts',\n      'scripts/controller.js',\n      'scripts/controller.spec.js',\n      'scripts/index.js',\n      'scripts/index.spec.js'].join('\\n');\n    assert.equal(actual, expected, 'Should generate all files from the template.');\n    return res;\n  })\n  .then(res => {\n    const fixedModelXML = path.resolve(__dirname, '../../test/fixtures/widget-bb-ng/model.xml');\n    const generatedModelXML = path.resolve(res.dirname, 'model.xml');\n    const actual = fs.readFileSync(generatedModelXML, 'utf-8');\n    const expected = fs.readFileSync(fixedModelXML, 'utf-8');\n\n    assert.equal(actual, expected, 'Should generate the transformed model.xml');\n    return res;\n  })\n  .then(teardown);\n});\n\n/**\n* ------------------------------------------------------------------------\n* Test Fails\n* ------------------------------------------------------------------------\n*/\ntest('e2e :: bb-generate-item :: non existing generator', assert => {\n  const args = 'i-do-not-exist-name';\n  const cmd = [bin, args];\n\n  return run(cmd).then(res => {\n    const actual = res.stderr.includes('Unable to find');\n    const expected = true;\n    assert.equal(actual, expected, 'Should display the `Unable to find` message');\n    return res;\n  }).then(res => {\n    const actual = res.code;\n    const expected = 1;\n    assert.equal(actual, expected, 'Should exit with partial success exit code');\n    return res;\n  });\n});\n"]}