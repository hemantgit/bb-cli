{"version":3,"sources":["../../src/lib/error.js"],"names":["CommandError","settings","implementationContext","name","type","message","code","isCommandError","Error","captureStackTrace","error","inherits"],"mappings":"sEAAA,0B,4HAEA,QAASA,aAAT,EAA4D,IAAtCC,SAAsC,+CAA3B,EAA2B,iBAAvBC,sBAAuB,cAC1D,KAAKC,IAAL,CAAY,cAAZ,CACA,KAAKC,IAAL,CAAYH,SAASG,IAAT,EAAiB,SAA7B,CACA,KAAKC,OAAL,CAAeJ,SAASI,OAAT,EAAoB,oBAAnC,CACA,KAAKC,IAAL,CAAYL,SAASK,IAAT,EAAiB,CAA7B,CACA,KAAKC,cAAL,CAAsB,IAAtB,CACAC,MAAMC,iBAAN,CAAwB,IAAxB,CAA8BP,uBAAyBF,YAAvD,EACD,CAED,QAASU,MAAT,CAAeT,QAAf,CAAyB,CACvB,MAAO,IAAID,aAAJ,CAAiBC,QAAjB,CAA2BS,KAA3B,CAAP,CACD,CAED,eAAKC,QAAL,CAAcX,YAAd,CAA4BQ,KAA5B,EACA;;;;;;;;;;;;;;;;;;;;mBAsBeE,K","file":"error.js","sourcesContent":["import util from 'util';\n\nfunction CommandError(settings = {}, implementationContext) {\n  this.name = 'CommandError';\n  this.type = settings.type || 'Command';\n  this.message = settings.message || 'An error occurred.';\n  this.code = settings.code || 1;\n  this.isCommandError = true;\n  Error.captureStackTrace(this, implementationContext || CommandError);\n}\n\nfunction error(settings) {\n  return new CommandError(settings, error);\n}\n\nutil.inherits(CommandError, Error);\n/**\n * Create the new instance of the CommandError object,\n * ensuring that it properly extends from the Error class.\n * @module error\n * @type {object}\n * @example\n * Setting up the log header:\n *\n * ```javascript\n * import { error } from '@bb-cli/base';\n *\n * const out = sh.exec('ls', { silent: true });\n * if (out.code !== 0) {\n *   throw error({\n *     type: 'Shell.Exec',\n *     code: out.code,\n *     message: out.stderr.trim(),\n *   });\n * }\n * ```\n */\n\nexport default error;\n\n"]}