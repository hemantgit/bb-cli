'use strict';Object.defineProperty(exports,"__esModule",{value:true});exports.semver=exports.error=exports.utils=exports.sh=exports.ui=exports.log=exports.cli=undefined;var _semver=require('semver');var _semver2=_interopRequireDefault(_semver);var _cli=require('./lib/cli');var _cli2=_interopRequireDefault(_cli);var _log=require('./lib/log');var _log2=_interopRequireDefault(_log);var _ui=require('./lib/ui');var _ui2=_interopRequireDefault(_ui);var _sh=require('./lib/sh');var _sh2=_interopRequireDefault(_sh);var _utils=require('./lib/utils');var _utils2=_interopRequireDefault(_utils);var _error=require('./lib/error');var _error2=_interopRequireDefault(_error);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}// Since commander doesn't support yet Global options
// we'll be using ENV vars like COLOR and LOG_LEVEL
// Check more here https://github.com/tj/commander.js/issues/476
// cli.option('-C, --no-color [color]', 'disable colors terminal output.');
// cli.option('-l, --log-level [logLevel]', 'set log level.');
var COLOR=JSON.parse(process.env.COLOR||true);/**
* ------------------------------------------------------------------------
* Base API exports
* ------------------------------------------------------------------------
*/var LOG_LEVEL=process.env.LOG_LEVEL||'info';// set color support
if(!COLOR){// disable logger colors
_log2.default.disableColor();// colors
_ui2.default.colors.enabled=false;}// Set the log level
_log2.default.level=LOG_LEVEL;exports.cli=_cli2.default;exports.log=_log2.default;exports.ui=_ui2.default;exports.sh=_sh2.default;exports.utils=_utils2.default;exports.error=_error2.default;exports.semver=_semver2.default;
//# sourceMappingURL=index.js.map